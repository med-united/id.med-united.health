apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: id-certificate
  namespace: default
spec:
  dnsNames:
    - id.med-united.health
  secretName: id-tls
  issuerRef:
    name: letsencrypt-cluster-issuer
    kind: ClusterIssuer

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  namespace: default
  labels:
    app: keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      app: id
  template:
    metadata:
      labels:
        app: id
    spec:
      containers:
        - name: keycloak
          image: quay.io/keycloak/keycloak:latest
          args: [ "start-dev" ]
          env:
            - name: KC_HOSTNAME
              value: "id.med-united.health"
            - name: KEYCLOAK_ADMIN
              value: "admin"
            - name: KEYCLOAK_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak-config
                  key: admin-password
                  optional: false
            - name: KC_PROXY
              value: "edge"
            - name: KC_DB
              value: postgres
            - name: KC_DB_URL_HOST
              value: postgres.cfayfrqrsmtj.eu-central-1.rds.amazonaws.com
            - name: KC_DB_URL_DATABASE
              value: keycloak
            - name: KC_DB_USERNAME
              value: keycloak
            - name: KC_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak-config
                  key: db-password
                  optional: false
          ports:
            - name: http
              containerPort: 8080
          readinessProbe:
            httpGet:
              path: /realms/master
              port: 8080
          volumeMounts:
            - name: id-volume
              subPath: account
              mountPath: /opt/keycloak/themes/custom/account/account.ftl
            - name: id-volume
              subPath: properties
              mountPath: /opt/keycloak/themes/custom/account/theme.properties
            - name: id-volume
              subPath: login
              mountPath: /opt/keycloak/themes/custom/login/login.ftl
            - name: id-volume
              subPath: login-properties
              mountPath: /opt/keycloak/themes/custom/login/theme.properties
            - name: id-volume
              subPath: register-properties
              mountPath: /opt/keycloak/themes/custom/login/register.ftl
            - name: id-volume
              subPath: email-german
              mountPath: /opt/keycloak/themes/custom/email/messages/messages_en.properties
            - name: id-volume
              subPath: email-verification
              mountPath: /opt/keycloak/themes/custom/email/text/email-verification.ftl
            - name: id-volume
              subPath: email-verification-html
              mountPath: /opt/keycloak/themes/custom/email/html/email-verification.ftl
            - name: id-volume
              subPath: html-template
              mountPath: /opt/keycloak/themes/custom/email/html/template.ftl
            - name: id-volume
              subPath: email-properties
              mountPath: /opt/keycloak/themes/custom/email/theme.properties
      volumes:
        - name: id-volume
          configMap:
            name: id-config
---

kind: Service
apiVersion: v1
metadata:
  name: id
spec:
  selector:
    app: id
  ports:
    - port: 8080
  type: NodePort
---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: id
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  tls:
    - hosts:
        - id.med-united.health
      secretName: id-tls
  rules:
    - host: id.med-united.health
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: id
                port:
                  number: 8080

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: id-config
data:
  account: |
    <#import "template.ftl" as layout>
        <@layout.mainLayout active='account' bodyClass='user' ; section>

            <div class="row">
                <div class="col-md-10">
                    <h2>Konto bearbeiten</h2>
                </div>
                <div class="col-md-2 subtitle">
                    <span class="subtitle"><span class="required">*</span> Pflichtfelder</span>
                </div>
            </div>

            <form action="${url.accountUrl}" class="form-horizontal" method="post">

                <input type="hidden" id="stateChecker" name="stateChecker" value="${stateChecker}">

                <#if !realm.registrationEmailAsUsername>
                    <div class="form-group ${messagesPerField.printIfExists('username','has-error')}">
                        <div class="col-sm-2 col-md-2">
                            <label for="username" class="control-label">${msg("username")}</label>
                            <#if realm.editUsernameAllowed><span class="required">*</span></#if>
                        </div>

                        <div class="col-sm-10 col-md-10">
                            <input type="text" class="form-control" id="username" name="username" <#if
                                !realm.editUsernameAllowed>disabled="disabled"
                </#if> value="${(account.username!'')}"/>
                </div>
                </div>
                </#if>

                <div class="form-group ${messagesPerField.printIfExists('email','has-error')}">
                    <div class="col-sm-2 col-md-2">
                        <label for="email" class="control-label">${msg("email")}</label> <span class="required">*</span>
                    </div>

                    <div class="col-sm-10 col-md-10">
                        <input type="text" class="form-control" id="email" name="email" autofocus
                            value="${(account.email!'')}" />
                    </div>
                </div>

                <div class="form-group ${messagesPerField.printIfExists('firstName','has-error')}">
                    <div class="col-sm-2 col-md-2">
                        <label for="firstName" class="control-label">Vorname</label> <span
                            class="required">*</span>
                    </div>

                    <div class="col-sm-10 col-md-10">
                        <input type="text" class="form-control" id="firstName" name="firstName"
                            value="${(account.firstName!'')}" />
                    </div>
                </div>

                <div class="form-group ${messagesPerField.printIfExists('lastName','has-error')}">
                    <div class="col-sm-2 col-md-2">
                        <label for="lastName" class="control-label">Nachname</label> <span
                            class="required">*</span>
                    </div>

                    <div class="col-sm-10 col-md-10">
                        <input type="text" class="form-control" id="lastName" name="lastName"
                            value="${(account.lastName!'')}" />
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-sm-2 col-md-2">
                        <label for="user.attributes.phone" class="control-label">Telefonnummer</label> <span
                        class="required">*</span>
                    </div>

                    <div class="col-sm-10 col-md-10">
                        <input type="text" class="form-control" id="user.attributes.phone" name="user.attributes.phone"
                            value="${(account.attributes.phone!'')}" />
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-sm-2 col-md-2">
                        <label for="user.attributes.postalCode" class="control-label">Postleitzahl</label> <span
                        class="required">*</span>
                    </div>

                    <div class="col-sm-10 col-md-10">
                        <input type="text" class="form-control" id="user.attributes.postalCode" name="user.attributes.postalCode"
                            value="${(account.attributes.postalCode!'')}" />
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-sm-2 col-md-2">
                        <label for="user.attributes.street" class="control-label">Stra√üe</label> <span
                        class="required">*</span>
                    </div>

                    <div class="col-sm-10 col-md-10">
                        <input type="text" class="form-control" id="user.attributes.street" name="user.attributes.street"
                            value="${(account.attributes.street!'')}" />
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-sm-2 col-md-2">
                        <label for="user.attributes.city" class="control-label">Stadt</label> <span
                        class="required">*</span>
                    </div>

                    <div class="col-sm-10 col-md-10">
                        <input type="text" class="form-control" id="user.attributes.city" name="user.attributes.city"
                            value="${(account.attributes.city!'')}" />
                    </div>
                </div>

                <div class="form-group">
                    <div id="kc-form-buttons" class="col-md-offset-2 col-md-10 submit">
                        <div class="">
                            <#if url.referrerURI??><a
                                    href="${url.referrerURI}">${kcSanitize(msg("backToApplication")?no_esc)}</a></#if>
                            <button type="submit"
                                class="${properties.kcButtonClass!} ${properties.kcButtonPrimaryClass!} ${properties.kcButtonLargeClass!}"
                                name="submitAction" value="Save">Speichern</button>
                            <button type="submit"
                                class="${properties.kcButtonClass!} ${properties.kcButtonDefaultClass!} ${properties.kcButtonLargeClass!}"
                                name="submitAction" value="Cancel">L√∂schen</button>
                            <button type="button" onclick="location.href = 'https://care.med-united.health/';"
                                class="${properties.kcButtonClass!} ${properties.kcButtonDefaultClass!} ${properties.kcButtonLargeClass!}"
                                name="goBack" value="Back">Zur√ºck zu Med-United</button>
                        </div>
                    </div>
                </div>
            </form>

        </@layout.mainLayout>
  properties: |
    parent=keycloak
    import=common/keycloak
  login: |
    <#import "template.ftl" as layout>
        <@layout.registrationLayout displayMessage=!messagesPerField.existsError('username','password') displayInfo=realm.password && realm.registrationAllowed && !registrationDisabled??; section>
            <#if section = "header">
                Anmeldung
            <#elseif section = "form">
            <div id="kc-form">
                  <div id="kc-form-wrapper">
                    <#if realm.password>
                        <form id="kc-form-login" onsubmit="login.disabled = true; return true;" action="${url.loginAction}" method="post">
                            <#if !usernameHidden??>
                                <div class="${properties.kcFormGroupClass!}">
                                    <label for="username" class="${properties.kcLabelClass!}"><#if !realm.loginWithEmailAllowed>${msg("username")}<#elseif !realm.registrationEmailAsUsername>${msg("usernameOrEmail")}<#else>${msg("email")}</#if></label>

                                    <input tabindex="1" id="username" class="${properties.kcInputClass!}" name="username" value="${(login.username!'')}"  type="text" autofocus autocomplete="off"
                                           aria-invalid="<#if messagesPerField.existsError('username','password')>true</#if>"
                                    />

                                    <#if messagesPerField.existsError('username','password')>
                                        <span id="input-error" class="${properties.kcInputErrorMessageClass!}" aria-live="polite">
                                                ${kcSanitize(messagesPerField.getFirstError('username','password'))?no_esc}
                                        </span>
                                    </#if>

                                </div>
                            </#if>

                            <div class="${properties.kcFormGroupClass!}">
                                <label for="password" class="${properties.kcLabelClass!}">Passwort</label>

                                <input tabindex="2" id="password" class="${properties.kcInputClass!}" name="password" type="password" autocomplete="off"
                                       aria-invalid="<#if messagesPerField.existsError('username','password')>true</#if>"
                                />

                                <#if usernameHidden?? && messagesPerField.existsError('username','password')>
                                    <span id="input-error" class="${properties.kcInputErrorMessageClass!}" aria-live="polite">
                                            ${kcSanitize(messagesPerField.getFirstError('username','password'))?no_esc}
                                    </span>
                                </#if>

                            </div>

                            <div class="${properties.kcFormGroupClass!} ${properties.kcFormSettingClass!}">
                                <div id="kc-form-options">
                                    <#if realm.rememberMe && !usernameHidden??>
                                        <div class="checkbox">
                                            <label>
                                                <#if login.rememberMe??>
                                                    <input tabindex="3" id="rememberMe" name="rememberMe" type="checkbox" checked> Log-In Daten merken
                                                <#else>
                                                    <input tabindex="3" id="rememberMe" name="rememberMe" type="checkbox"> Log-In Daten merken
                                                </#if>
                                            </label>
                                        </div>
                                    </#if>
                                    </div>
                                    <div class="${properties.kcFormOptionsWrapperClass!}">
                                        <#if realm.resetPasswordAllowed>
                                            <span><a tabindex="5" href="${url.loginResetCredentialsUrl}">Passwort vergessen?</a></span>
                                        </#if>
                                    </div>

                              </div>

                              <div id="kc-form-buttons" class="${properties.kcFormGroupClass!}">
                                  <input type="hidden" id="id-hidden-input" name="credentialId" <#if auth.selectedCredential?has_content>value="${auth.selectedCredential}"</#if>/>
                                  <input tabindex="4" class="${properties.kcButtonClass!} ${properties.kcButtonPrimaryClass!} ${properties.kcButtonBlockClass!} ${properties.kcButtonLargeClass!}" name="login" id="kc-login" type="submit" value="Einloggen"/>
                              </div>
                        </form>
                    </#if>
                    </div>

                </div>
                <#elseif section = "info" >
                    <#if realm.password && realm.registrationAllowed && !registrationDisabled??>
                        <div id="kc-registration-container">
                            <div id="kc-registration">
                                <span>Neuer Benutzer? <a tabindex="6"
                                                             href="${url.registrationUrl}">Registrieren</a></span>
                            </div>
                        </div>
                    </#if>
                <#elseif section = "socialProviders" >
                    <#if realm.password && social.providers??>
                        <div id="kc-social-providers" class="${properties.kcFormSocialAccountSectionClass!}">
                            <hr/>
                            <h4>${msg("identity-provider-login-label")}</h4>

                            <ul class="${properties.kcFormSocialAccountListClass!} <#if social.providers?size gt 3>${properties.kcFormSocialAccountListGridClass!}</#if>">
                                <#list social.providers as p>
                                    <a id="social-${p.alias}" class="${properties.kcFormSocialAccountListButtonClass!} <#if social.providers?size gt 3>${properties.kcFormSocialAccountGridItem!}</#if>"
                                            type="button" href="${p.loginUrl}">
                                        <#if p.iconClasses?has_content>
                                            <i class="${properties.kcCommonLogoIdP!} ${p.iconClasses!}" aria-hidden="true"></i>
                                            <span class="${properties.kcFormSocialAccountNameClass!} kc-social-icon-text">${p.displayName!}</span>
                                        <#else>
                                            <span class="${properties.kcFormSocialAccountNameClass!}">${p.displayName!}</span>
                                        </#if>
                                    </a>
                                </#list>
                            </ul>
                        </div>
                    </#if>
                </#if>

        </@layout.registrationLayout>
  login-properties: |
    parent=keycloak
    import=common/keycloak
  register-properties: |
    <#import "template.ftl" as layout>
    <@layout.registrationLayout displayMessage=!messagesPerField.existsError('firstName','lastName','email','username','password','password-confirm'); section>
        <#if section = "header">
            Registrierung
        <#elseif section = "form">
            <form id="kc-register-form" class="${properties.kcFormClass!}" action="${url.registrationAction}" method="post">
                <div class="${properties.kcFormGroupClass!}">
                    <div class="${properties.kcLabelWrapperClass!}">
                        <label for="firstName" class="${properties.kcLabelClass!}">Vorname</label>
                    </div>
                    <div class="${properties.kcInputWrapperClass!}">
                        <input type="text" id="firstName" class="${properties.kcInputClass!}" name="firstName"
                               value="${(register.formData.firstName!'')}"
                               aria-invalid="<#if messagesPerField.existsError('firstName')>true</#if>"
                        />

                        <#if messagesPerField.existsError('firstName')>
                            <span id="input-error-firstname" class="${properties.kcInputErrorMessageClass!}" aria-live="polite">
                                ${kcSanitize(messagesPerField.get('firstName'))?no_esc}
                            </span>
                        </#if>
                    </div>
                </div>

                <div class="${properties.kcFormGroupClass!}">
                    <div class="${properties.kcLabelWrapperClass!}">
                        <label for="lastName" class="${properties.kcLabelClass!}">Nachname</label>
                    </div>
                    <div class="${properties.kcInputWrapperClass!}">
                        <input type="text" id="lastName" class="${properties.kcInputClass!}" name="lastName"
                               value="${(register.formData.lastName!'')}"
                               aria-invalid="<#if messagesPerField.existsError('lastName')>true</#if>"
                        />

                        <#if messagesPerField.existsError('lastName')>
                            <span id="input-error-lastname" class="${properties.kcInputErrorMessageClass!}" aria-live="polite">
                                ${kcSanitize(messagesPerField.get('lastName'))?no_esc}
                            </span>
                        </#if>
                    </div>
                </div>

                <div class="${properties.kcFormGroupClass!}">
                    <div class="${properties.kcLabelWrapperClass!}">
                        <label for="email" class="${properties.kcLabelClass!}">${msg("email")}</label>
                    </div>
                    <div class="${properties.kcInputWrapperClass!}">
                        <input type="text" id="email" class="${properties.kcInputClass!}" name="email"
                               value="${(register.formData.email!'')}" autocomplete="email"
                               aria-invalid="<#if messagesPerField.existsError('email')>true</#if>"
                        />

                        <#if messagesPerField.existsError('email')>
                            <span id="input-error-email" class="${properties.kcInputErrorMessageClass!}" aria-live="polite">
                                ${kcSanitize(messagesPerField.get('email'))?no_esc}
                            </span>
                        </#if>
                    </div>
                </div>

                <#if !realm.registrationEmailAsUsername>
                    <div class="${properties.kcFormGroupClass!}">
                        <div class="${properties.kcLabelWrapperClass!}">
                            <label for="username" class="${properties.kcLabelClass!}">${msg("username")}</label>
                        </div>
                        <div class="${properties.kcInputWrapperClass!}">
                            <input type="text" id="username" class="${properties.kcInputClass!}" name="username"
                                   value="${(register.formData.username!'')}" autocomplete="username"
                                   aria-invalid="<#if messagesPerField.existsError('username')>true</#if>"
                            />

                            <#if messagesPerField.existsError('username')>
                                <span id="input-error-username" class="${properties.kcInputErrorMessageClass!}" aria-live="polite">
                                    ${kcSanitize(messagesPerField.get('username'))?no_esc}
                                </span>
                            </#if>
                        </div>
                    </div>
                </#if>

                <#if passwordRequired??>
                    <div class="${properties.kcFormGroupClass!}">
                        <div class="${properties.kcLabelWrapperClass!}">
                            <label for="password" class="${properties.kcLabelClass!}">Passwort</label>
                        </div>
                        <div class="${properties.kcInputWrapperClass!}">
                            <input type="password" id="password" class="${properties.kcInputClass!}" name="password"
                                   autocomplete="new-password"
                                   aria-invalid="<#if messagesPerField.existsError('password','password-confirm')>true</#if>"
                            />

                            <#if messagesPerField.existsError('password')>
                                <span id="input-error-password" class="${properties.kcInputErrorMessageClass!}" aria-live="polite">
                                    ${kcSanitize(messagesPerField.get('password'))?no_esc}
                                </span>
                            </#if>
                        </div>
                    </div>

                    <div class="${properties.kcFormGroupClass!}">
                        <div class="${properties.kcLabelWrapperClass!}">
                            <label for="password-confirm"
                                   class="${properties.kcLabelClass!}">Passwort best√§tigen</label>
                        </div>
                        <div class="${properties.kcInputWrapperClass!}">
                            <input type="password" id="password-confirm" class="${properties.kcInputClass!}"
                                   name="password-confirm"
                                   aria-invalid="<#if messagesPerField.existsError('password-confirm')>true</#if>"
                            />

                            <#if messagesPerField.existsError('password-confirm')>
                                <span id="input-error-password-confirm" class="${properties.kcInputErrorMessageClass!}" aria-live="polite">
                                    ${kcSanitize(messagesPerField.get('password-confirm'))?no_esc}
                                </span>
                            </#if>
                        </div>
                    </div>
                </#if>

                <#if recaptchaRequired??>
                    <div class="form-group">
                        <div class="${properties.kcInputWrapperClass!}">
                            <div class="g-recaptcha" data-size="compact" data-sitekey="${recaptchaSiteKey}"></div>
                        </div>
                    </div>
                </#if>

                <div class="${properties.kcFormGroupClass!}">
                    <div id="kc-form-options" class="${properties.kcFormOptionsClass!}">
                        <div class="${properties.kcFormOptionsWrapperClass!}">
                            <span><a href="${url.loginUrl}">${kcSanitize(msg("Zur√ºck zur Anmeldung"))?no_esc}</a></span>
                        </div>
                    </div>

                    <div id="kc-form-buttons" class="${properties.kcFormButtonsClass!}">
                        <input class="${properties.kcButtonClass!} ${properties.kcButtonPrimaryClass!} ${properties.kcButtonBlockClass!} ${properties.kcButtonLargeClass!}" type="submit" value="Sich registrieren"/>
                    </div>
                </div>
            </form>
        </#if>
    </@layout.registrationLayout>
  email-german: |
    emailVerificationSubject=Verify email
    emailVerificationBody=Someone has created a {2} account with this email address. If this was you, click the link below to verify your email address\n\n{0}\n\nThis link will expire within {3}.\n\nIf you didn''t create this account, just ignore this message.
    emailVerificationBodyHtml=<p>Someone has created a {2} account with this email address. If this was you, click the link below to verify your email address</p><p><a href="{0}">Link to e-mail address verification</a></p><p>This link will expire within {3}.</p><p>If you didn''t create this account, just ignore this message.</p>
    emailUpdateConfirmationSubject=Verify new email
    emailUpdateConfirmationBody=To update your {2} account with email address {1}, click the link below\n\n{0}\n\nThis link will expire within {3}.\n\nIf you don''t want to proceed with this modification, just ignore this message.
    emailUpdateConfirmationBodyHtml=<p>To update your {2} account with email address {1}, click the link below</p><p><a href="{0}">{0}</a></p><p>This link will expire within {3}.</p><p>If you don''t want to proceed with this modification, just ignore this message.</p>
    emailTestSubject=[KEYCLOAK] - SMTP test message
    emailTestBody=This is a test message
    emailTestBodyHtml=<p>This is a test message</p>
    identityProviderLinkSubject=Link {0}
    identityProviderLinkBody=Someone wants to link your "{1}" account with "{0}" account of user {2} . If this was you, click the link below to link accounts\n\n{3}\n\nThis link will expire within {5}.\n\nIf you don''t want to link account, just ignore this message. If you link accounts, you will be able to login to {1} through {0}.
    identityProviderLinkBodyHtml=<p>Someone wants to link your <b>{1}</b> account with <b>{0}</b> account of user {2}. If this was you, click the link below to link accounts</p><p><a href="{3}">Link to confirm account linking</a></p><p>This link will expire within {5}.</p><p>If you don''t want to link account, just ignore this message. If you link accounts, you will be able to login to {1} through {0}.</p>
    passwordResetSubject=Reset password
    passwordResetBody=Someone just requested to change your {2} account''s credentials. If this was you, click on the link below to reset them.\n\n{0}\n\nThis link and code will expire within {3}.\n\nIf you don''t want to reset your credentials, just ignore this message and nothing will be changed.
    passwordResetBodyHtml=<p>Someone just requested to change your {2} account''s credentials. If this was you, click on the link below to reset them.</p><p><a href="{0}">Link to reset credentials</a></p><p>This link will expire within {3}.</p><p>If you don''t want to reset your credentials, just ignore this message and nothing will be changed.</p>
    executeActionsSubject=Update Your Account
    executeActionsBody=Your administrator has just requested that you update your {2} account by performing the following action(s): {3}. Click on the link below to start this process.\n\n{0}\n\nThis link will expire within {4}.\n\nIf you are unaware that your administrator has requested this, just ignore this message and nothing will be changed.
    executeActionsBodyHtml=<p>Your administrator has just requested that you update your {2} account by performing the following action(s): {3}. Click on the link below to start this process.</p><p><a href="{0}">Link to account update</a></p><p>This link will expire within {4}.</p><p>If you are unaware that your administrator has requested this, just ignore this message and nothing will be changed.</p>
    eventLoginErrorSubject=Login error
    eventLoginErrorBody=A failed login attempt was detected to your account on {0} from {1}. If this was not you, please contact an administrator.
    eventLoginErrorBodyHtml=<p>A failed login attempt was detected to your account on {0} from {1}. If this was not you, please contact an administrator.</p>
    eventRemoveTotpSubject=Remove OTP
    eventRemoveTotpBody=OTP was removed from your account on {0} from {1}. If this was not you, please contact an administrator.
    eventRemoveTotpBodyHtml=<p>OTP was removed from your account on {0} from {1}. If this was not you, please contact an administrator.</p>
    eventUpdatePasswordSubject=Update password
    eventUpdatePasswordBody=Your password was changed on {0} from {1}. If this was not you, please contact an administrator.
    eventUpdatePasswordBodyHtml=<p>Your password was changed on {0} from {1}. If this was not you, please contact an administrator.</p>
    eventUpdateTotpSubject=Update OTP
    eventUpdateTotpBody=OTP was updated for your account on {0} from {1}. If this was not you, please contact an administrator.
    eventUpdateTotpBodyHtml=<p>OTP was updated for your account on {0} from {1}. If this was not you, please contact an administrator.</p>
    
    requiredAction.CONFIGURE_TOTP=Configure OTP
    requiredAction.terms_and_conditions=Terms and Conditions
    requiredAction.UPDATE_PASSWORD=Update Password
    requiredAction.UPDATE_PROFILE=Update Profile
    requiredAction.VERIFY_EMAIL=Verify Email
    requiredAction.CONFIGURE_RECOVERY_AUTHN_CODES=Generate Recovery Codes
    
    # units for link expiration timeout formatting
    linkExpirationFormatter.timePeriodUnit.seconds=seconds
    linkExpirationFormatter.timePeriodUnit.seconds.1=second
    linkExpirationFormatter.timePeriodUnit.minutes=minutes
    linkExpirationFormatter.timePeriodUnit.minutes.1=minute
    #for language which have more unit plural forms depending on the value (eg. Czech and other Slavic langs) you can override unit text for some other values like this: 
    #linkExpirationFormatter.timePeriodUnit.minutes.2=minuty
    #linkExpirationFormatter.timePeriodUnit.minutes.3=minuty
    #linkExpirationFormatter.timePeriodUnit.minutes.4=minuty
    linkExpirationFormatter.timePeriodUnit.hours=hours
    linkExpirationFormatter.timePeriodUnit.hours.1=hour
    linkExpirationFormatter.timePeriodUnit.days=days
    linkExpirationFormatter.timePeriodUnit.days.1=day
    
    emailVerificationBodyCode=Please verify your email address by entering in the following code.\n\n{0}\n\n.
    emailVerificationBodyCodeHtml=<p>Please verify your email address by entering in the following code.</p><p><b>{0}</b></p>
  email-verification: |
    <#ftl output_format="plainText">
    ${msg("emailVerificationBody",link, linkExpiration, realmName, linkExpirationFormatter(linkExpiration))}
  email-verification-html: |
    <#import "template.ftl" as layout>
    <@layout.emailLayout>
    ${kcSanitize(msg("emailVerificationBodyHtml",link, linkExpiration, realmName, linkExpirationFormatter(linkExpiration)))?no_esc}
    </@layout.emailLayout>
  html-template: |
    <#macro emailLayout>
    <html>
    <body>
        <#nested>
    </body>
    </html>
    </#macro>
  email-properties: |
    locales=en,de