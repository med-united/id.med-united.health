apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: id-certificate
  namespace: default
spec:
  dnsNames:
    - id.med-united.health
  secretName: id-tls
  issuerRef:
    name: letsencrypt-cluster-issuer
    kind: ClusterIssuer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  namespace: default
  labels:
    app: keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      app: id
  template:
    metadata:
      labels:
        app: id
    spec:
      containers:
      - name: keycloak
        image: quay.io/keycloak/keycloak:latest
        args: ["start-dev"]
        env:
        - name: KC_HOSTNAME
          value: "id.med-united.health"
        - name: KEYCLOAK_ADMIN
          value: "admin"
        - name: KEYCLOAK_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: keycloak-config
              key: admin-password
              optional: false
        - name: KC_PROXY
          value: "edge"
        - name: KC_DB
          value: postgres
        - name: KC_DB_URL_HOST
          value: postgres.cfayfrqrsmtj.eu-central-1.rds.amazonaws.com
        - name: KC_DB_URL_DATABASE
          value: keycloak
        - name: KC_DB_USERNAME
          value: keycloak
        - name: KC_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: keycloak-config
              key: db-password
              optional: false
        ports:
        - name: http
          containerPort: 8080
        readinessProbe:
          httpGet:
            path: /realms/master
            port: 8080
---

kind: Service
apiVersion: v1
metadata:
  name: id
spec:
  selector:
    app: id
  ports:
    - port: 8080
  type: NodePort
---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: id
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  tls:
  - hosts:
    - id.med-united.health
    secretName: id-tls
  rules:
  - host: id.med-united.health
    http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: id
              port:
                number: 8080
